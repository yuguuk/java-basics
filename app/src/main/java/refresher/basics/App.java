/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package refresher.basics;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

public class App {
    static List<Employee> empList = new ArrayList<>();
    {
    empList.add(new Employee(4, "Dave", 25, 28000));
    empList.add(new Employee(20, "Mike", 20, 10000));
    empList.add(new Employee(9, "Abhi", 32, 5000));
    empList.add(new Employee(1, "Lisa", 40, 19000));
    empList.add(new Employee(15, "Lisa", 25, 25000));
    empList.add(new Employee(8, "Lisa", 30, 20000));
    }

    public String getGreeting() {
        return "Hello World!";
    }

    public static int method1()
    {
        try {
            return 1;
        } catch (Exception e) {
            return 2;
        }finally{
            return 3;
        }

        // return 4;
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());

        Canine canine = new Dog();
        try {
            canine.hello();
        } catch (Exception e) {
            System.out.println("Exception Handled!");
        }

        int result = method1();
        System.out.println(result);

        demoStringBufferAndBuilder(/**
         * 
         */
        );

        
        System.out.println("\nComparable Demo:");
        comparableDemo();
        System.out.println("\nComparator Demo:");
        comparatorDemo();

        System.out.println("Nested Classes");
        System.out.println("================================");
        OuterClass.InnerClass innerClassObject = new OuterClass.InnerClass();
        innerClassObject.print();
    }

    /**
     * Cover topics relevant to String (immutable), StringBuffer (mutable, and thread-safe)
     * and StringBuilder(mutable and not thread-safe).
     * 
     * Relevant knowledge: two objects that are equal due to the equals method, should have the 
     * same hashCode, however having the same hashCode need not mean equal as a result of a call
     * to the equals method.
     */
    static void demoStringBufferAndBuilder() {
        
        StringBuilder sb1 = new StringBuilder("hello");
        StringBuilder sb2 = new StringBuilder("hello");

        if(sb1.equals(sb2)){
            System.out.println("sb1 equals sb2");
        }else{
            System.out.println("sb1 not equal sb2!");
        }
    }

    static void comparableDemo(){
        Collections.sort(empList);
        System.out.println(empList);
    }

    public static void comparatorDemo() {
        System.out.println("Comparing by Employee Name: \n");
        Collections.sort(empList, new NameComparator());
        System.out.println(empList);
        System.out.println("Comparing by Employee Salary: \n");
        Collections.sort(empList, new SalaryComparator());
        System.out.println(empList);
    }

}
